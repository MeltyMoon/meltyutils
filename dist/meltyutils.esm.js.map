{"version":3,"file":"meltyutils.esm.js","sources":["../src/utils/array.js","../src/utils/regexp.js","../src/utils/boolean.js","../src/utils/date.js","../src/utils/number.js","../src/utils/object.js","../src/utils/string.js","../src/utils/document.js","../src/index.esm.cjs"],"sourcesContent":["/**\n * @class ArrayUtils\n * @classdesc Various array utilities.\n */\nclass ArrayUtils {\n\t/**\n\t * Groups items in an array in groups of a specified size.\n\t * \n\t * Example: group([0, 0, 0, 0, 0, 0], 2) => [[0, 0], [0, 0], [0, 0]].\n\t * @param {Array.<*>} array \n\t * @param {number} groupSize The size of the groups. \n\t * @returns {Array.<Array.<*>>}\n\t * @memberof ArrayUtils\n\t */\n\tstatic group(array, groupSize) {\n\t\tif (!groupSize) {\n\t\t\tthrow new ReferenceError(\"Must provide a group size.\");\n\t\t}\n\n\t\tlet groups = [];\n\t\tfor (const item of array) {\n\t\t\tif (groups[groups.length - 1].length >= groupSize) {\n\t\t\t\tgroups.push([]);\n\t\t\t}\n\t\t\tgroups[groups.length - 1].push(item); \n\t\t}\n\n\t\treturn groups;\n\t}\n\n\t/**\n\t * Groups an array by callback checks.\n\t * \n\t * If an item falls under 2 groups, it will go into the group that comes first.\n\t * @param {Array.<*>} array \n\t * @param {Array.<ItemCallback>} groups \n\t * @memberof ArrayUtils\n\t */\n\tstatic groupBy(array, groups) {\n\t\tlet results = [];\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tfor (const index of Object.keys(groups)) {\n\t\t\tresults[index] = [];\n\t\t}\n\n\t\tfor (const item of array) {\n\t\t\tlet grouped = false;\n\t\t\tfor (const [index, group] of Object.entries(groups)) {\n\t\t\t\tif (!grouped) {\n\t\t\t\t\tif (group(item) === true) {\n\t\t\t\t\t\tresults[index].push(item);\n\t\t\t\t\t\tgrouped = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Maps an array by the property of each item.\n\t * @param {Array.<*>} array\n\t * @param {string|number} property\n\t * @returns {Array.<*>}\n\t * @memberof ArrayUtils\n\t */\n\tstatic mapProperty(array, property) {\n\t\treturn array.map(item => item[property]);\n\t}\n\n\t/**\n\t * Gets the last index of an array.\n\t * @param {Array.<*>} array \n\t * @returns {number}\n\t * @memberof ArrayUtils\n\t */\n\tstatic lastIndex(array) {\n\t\treturn array.length - 1;\n\t}\n\n\t/**\n\t * Gets the number of instances of the specified value in the given array.\n\t * @static\n\t * @param {Array.<*>} array \n\t * @param {*} value \n\t * @return {number}\n\t * @memberof ArrayUtils\n\t */\n\tstatic getIterations(array, value) {\n\t\treturn array.reduce((a, v) => a === value ? v + 1 : v, 0);\n\t}\n}\n\nexport default ArrayUtils;","const isBooleanString = /^(t(rue)?|f(alse)?|y(es)?|n(o)?|0|1)$/i,\n\tbooleanStringIsTrue = /^(t(rue)?|y(es)?|1)$/i,\n\tbooleanStringIsFalse = /^(f(alse)?|n(o)?|0)$/i,\n\tsentenceSplitString = /\\.(?=(\\s|$))/g;\n\nexport {\n\tisBooleanString,\n\tbooleanStringIsFalse,\n\tbooleanStringIsTrue,\n\tsentenceSplitString\n}\n\n/**\n * @class RegExpUtils\n * @classdesc Various regular expression utilities.\n */\nclass RegExpUtils {\n\t\n}\n\nexport default RegExpUtils;","import { isBooleanString, booleanStringIsTrue, booleanStringIsFalse } from \"./regexp\";\n/**\n * @typedef {boolean|string|0|1} BooleanResolvable\n */\n\n/**\n * @class BooleanUtils\n * @classdesc Various boolean utilities.\n */\nexport default class BooleanUtils {\n\t/**\n\t * Checks if the provided thing is parsable as boolean.\n\t *\n\t * @static\n\t * @param {BooleanResolvable} resolvable \n\t * @return {boolean}\n\t * @memberof BooleanUtils\n\t */\n\tstatic is(resolvable) {\n\t\tswitch (typeof resolvable) {\n\t\t\tdefault:\n\t\t\t\treturn false;\n\n\t\t\tcase \"boolean\":\n\t\t\t\treturn true;\n\n\t\t\tcase \"string\":\n\t\t\t\treturn isBooleanString.test(resolvable);\n\n\t\t\tcase \"number\":\n\t\t\t\tif ([0,1].includes( resolvable)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Parses a resolvable boolean.\n\t * Returns null if it is not a boolean.\n\t *\n\t * @param {BooleanResolvable} resolvable \n\t * @return {boolean|null}\n\t * @memberof BooleanUtils\n\t */\n\tstatic parse(resolvable) {\n\t\tswitch (resolvable) {\n\t\t\tcase 0:\n\t\t\t\treturn false;\n\t\t\tcase 1:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tswitch (typeof resolvable) {\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn resolvable;\n\t\t\tcase \"string\":\n\t\t\t\tif (isBooleanString.test(resolvable)) {\n\t\t\t\t\treturn this.isTrue(resolvable);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a resolvable boolean is true.\n\t *\n\t * @static\n\t * @param {BooleanResolvable} resolvable \n\t * @return {boolean}\n\t * @memberof BooleanUtils\n\t */\n\tstatic isTrue(resolvable) {\n\t\tswitch (typeof resolvable) {\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn resolvable;\n\t\t\tcase \"string\":\n\t\t\t\treturn booleanStringIsTrue.test(resolvable);\n\t\t\tcase \"number\":\n\t\t\t\treturn resolvable === 1;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a resolvable boolean is false.\n\t *\n\t * @static\n\t * @param {BooleanResolvable} resolvable \n\t * @return {boolean}\n\t * @memberof BooleanUtils\n\t */\n\tstatic isFalse(resolvable) {\n\t\tswitch (typeof resolvable) {\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn !resolvable;\n\t\t\tcase \"string\":\n\t\t\t\treturn booleanStringIsFalse.test(resolvable);\n\t\t\tcase \"number\": \n\t\t\t\treturn resolvable === 0;\n\t\t}\n\t}\n}","const timeMs = [1e3, 6e4, 36e5, 864e5, 2628e6, 31536e6];\n/**\n * @typedef {Date|number} DateResolvable\n */\n\n/**\n * @class DateUtils\n * @classdesc Various date utilities.\n */\nclass DateUtils {\n\t/**\n\t * Gets the difference between two dates. (in milliseconds) \n\t * @param {DateResolvable} date1 The first date. \n\t * @param {?DateResolvable} date2 The second date.\n\t * \n\t * Defaults to the current date if not provided.\n\t * @returns {number}\n\t * @memberof DateUtils\n\t */\n\tstatic difference(date1, date2 = null) {\n\t\tif (date2 === null) {\n\t\t\tdate1 = date2;\n\t\t\tdate2 = Date.now();\n\t\t}\n\t\t\n\t\tif (date1 instanceof Date) {\n\t\t\tdate1 = date1.valueOf();\n\t\t}\n\n\t\tif (date2 instanceof Date) {\n\t\t\tdate2 = date2.valueOf();\n\t\t}\n\n\t\treturn date1 - date2;\n\t}\n\n\t/**\n\t * Gets the date from the provided relative string.\n\t * @param {string} string \n\t * @returns {number}\n\t * @memberof DateUtils\n\t */\n\tstatic parseRelativeString(string) {\n\t\tconst yearMatches = /[0-9]+(y|ear(s)?)/gi.exec(string),\n\t\t\tmonthMatches = /[0-9]+(M|month(s)?)/g.exec(string),\n\t\t\tdayMatches = /[0-9]+(d(ay(s)?)?)/gi.exec(string),\n\t\t\thourMatches = /[0-9]+(h(our(s)?)?)/gi.exec(string),\n\t\t\tminuteMatches = /[0-9]+(m(inute(s)?)?)/g.exec(string),\n\t\t\tsecondMatches = /[0-9]+(s(econd(s)?)?)/gi.exec(string);\n\n\t\tlet relative = 0, value;\n\t\tfor (const [index, matches] of Object.entries([secondMatches, minuteMatches, hourMatches, dayMatches, monthMatches, yearMatches])) {\n\t\t\tif ((matches?.length || 0) > 0) {\n\t\t\t\tfor (const match of matches) {\n\t\t\t\t\tvalue = parseInt(match);\n\t\t\t\t\tif (!isNaN(value)) {\n\t\t\t\t\t\trelative += value * timeMs[index];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Date.now() + relative;\n\t}\n\n\n\t/**\n\t * Checks if the resolvable is a date.\n\t * @param {DateResolvable} resolvable\n\t * @returns {boolean} \n\t * @memberof DateUtils\n\t */\n\tstatic isDate(resolvable) {\n\t\treturn (new Date(resolvable) !== \"Invalid Date\") && !isNaN(new Date(resolvable));\n\t}\n\n\t/**\n\t * Waits till the date to resolve (and run the provided callback if provided)\n\t * @param {DateResolvable} date \n\t * @param {?function} callback\n\t * @param {...*} args\n\t * @returns {Promise.<*>}\n\t */\n\tstatic waitTill(date, callback, ...args) {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(...args);\n\t\t\t\t}\n\t\t\t}, DateUtils.difference(date) - 100);\n\t\t});\n\t}\n}\n\nexport default DateUtils;","const words = {\n\t// extensions: [\n\t// \t{ ext: \"un\", value: 1, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"duo\", value: 2, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"tre\", value: 3, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"s\", \"X\": \"s\" } },\n\t// \t{ ext: \"quattor\", value: 4, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"quinqua\", value: 5, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"se\", value: 6, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"x\", \"X\": \"\" } },\n\t// \t{ ext: \"septe\", value: 7, suffixMarking: \"\", suffixes: { \"N\": \"n\", \"M\": \"m\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"octo\", value: 8, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"nove\", value: 9, suffixMarking: \"\", suffixes: { \"N\": \"n\", \"M\": \"m\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"deci\", value: 10, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"viginti\", value: 20, suffixMarking: \"MS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"triginti\", value: 30, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"quadraginta\", value: 40, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"quinquaginta\", value: 50, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"sexaginta\", value: 60, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"septuaginta\", value: 70, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"octoginta\", value: 80, suffixMarking: \"MX\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"nonaginta\", value: 90, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"centi\", value: 100, suffixMarking: \"NX\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"ducenti\", value: 200, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"trecenti\", value: 300, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"quadringenti\", value: 400, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"quingenti\", value: 500, suffixMarking: \"NS\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"sescenti\", value: 600, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"septingenti\", value: 700, suffixMarking: \"N\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"octingenti\", value: 800, suffixMarking: \"MX\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// \t{ ext: \"nonaginti\", value: 900, suffixMarking: \"\", suffixes: { \"N\": \"\", \"M\": \"\", \"S\": \"\", \"X\": \"\" } },\n\t// ],\n\tbigNumbers: [\n\t\t\"\", \"thousand\", \"million\", \"billion\", \"trillion\", \"quadrillion\", \"quintillion\"\n\t],\n\tsingle: [\n\t\t\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"\"\n\t],\n\tteens: [\n\t\t\"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\",\n\t],\n\ttens: [, ,\n\t\t\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"\n\t],\n}\n\n/**\n * @class NumberUtils\n * @classdesc Various number/math utilities.\n */\nclass NumberUtils {\n\t/**\n\t * Stringifies numbers.\n\t * \n\t * example:\n\t * ```js\n\t * stringify(1) === \"one\"\n\t * ```\n\t * @param {number} number\n\t * @returns {string} \n\t */\n\tstatic stringify(number) {\n\t\tif (number === 0) {\n\t\t\treturn \"zero\";\n\t\t};\n\n\t\tconst groups = [];\n\n\t\twhile (number > 0) {\n\t\t\tgroups.push(number % 1000);\n\t\t\tnumber = Math.floor(number / 1000);\n\t\t}\n\n\t\tconst groupWords = groups.map((group, index) => {\n\t\t\tlet string = \"\";\n\n\t\t\tconst hundreds = Math.floor(group / 100),\n\t\t\t\ttensOnes = group % 100;\n\n\t\t\tif (hundreds > 0) {\n\t\t\t\tstring += `${words.single[hundreds]} hundred`;\n\t\t\t}\n\n\t\t\tif (tensOnes > 0) {\n\t\t\t\tif (!(tensOnes < 10 || tensOnes < 20)) {\n\t\t\t\t\tconst tens = Math.floor(tensOnes / 10),\n\t\t\t\t\t\tones = tensOnes % 10;\n\n\t\t\t\t\tstring += ` ${words.tens[tens]} ${ones > 0 ? words.single[ones] : \"\"}`;\n\t\t\t\t} else {\n\t\t\t\t\tstring += ` and ${tensOnes < 10 ? words.single[tensOnes] : words.teens[tensOnes - 10]}`;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (group > 0 && index < words.bigNumbers.length) {\n\t\t\t\tstring += ` ${words.bigNumbers[index]}`;\n\t\t\t}\n\n\t\t\treturn string.trim();\n\t\t});\n\n\t\treturn groupWords\n\t\t\t.reverse()\n\t\t\t.join(\" \")\n\t\t\t.replace(/(\\s)*$/g, \"\")\n\t\t\t.replace(/^and/, \"\")\n\t\t\t.replace(/^(\\s)*/g, \"\");\n\t}\n\n\t/**\n\t * Applies a range to a number.\n\t * @param {number} value The value to apply the range to.\n\t * @param {number} min The minimum/lowest number in the range.\n\t * @param {number} max The maximum/highest number in the range.\n\t * @returns {number} \n\t * @memberof NumberUtils \n\t */\n\tstatic applyRange(value, min, max) {\n\t\tvalue = Math.max(min, value);\n\n\t\tif (max) {\n\t\t\tvalue = Math.min(max, value);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Generates a pseudo-random number in the specified range.\n\t * @param {number} min The minimum/lowest number in the range.\n\t * @param {number} max The maximum/highest number in the range.\n\t * @return {number}\n\t * @memberof NumberUtils\n\t */\n\tstatic randomNumber(min, max) {\n\t\treturn Math.floor(Math.random() * max) + min;\n\t}\n\n\t/**\n\t * Checks if a number is in the specified range.\n\t * @param {number} value The value to test. \n\t * @param {number} min The minimum/lowest number in the range.\n\t * @param {number} max The maximum/highest number in the range.\n\t * @returns {boolean}\n\t * @memberof NumberUtils \n\t */\n\tstatic inRange(value, min, max) {\n\t\treturn value >= min && value <= max;\n\t}\n\n\t/**\n\t * Returns the number on the opposite side of the range.\n\t * @param {number} value The value.\n\t * @param {number} min The minimum/lowest number in the range.\n\t * @param {number} max The maximum/highest number in the range.\n\t * @returns {number|null}\n\t * @memberof NumberUtils \n\t */\n\tstatic flipRange(value, min, max) {\n\t\tif (!NumberUtils.inRange(value, min, max)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn min - value + max;\n\t}\n}\n\nexport default NumberUtils;","\n/**\n * @class ObjectUtils\n * @classdesc Various object utilities.\n */\nclass ObjectUtils {\n\t/**\n\t * Adds a property while avoiding circular properties.\n\t * \n\t * @param {Object} object \n\t * @param {string|number} key \n\t * @param {*} property \n\t * @returns {void}\n\t * @memberof ObjectUtils\n\t */\n\tstatic addPropertyNonCircular(object, key, property) {\n\t\tObject.defineProperty(object, key, {\n\t\t\tset(v) {\n\t\t\t\tproperty = v;\n\t\t\t},\n\t\t\tget() {\n\t\t\t\treturn property;\n\t\t\t}\n\t\t});\n\n\t\treturn;\n\t}\n\n\t/**\n\t * Maps an object by a property.\n\t * @param {Object} object \n\t * @param {string|number} property\n\t * @returns {Array.<*>}\n\t * @memberof ObjectUtils\n\t */\n\tstatic mapProperty(object, property) {\n\t\treturn Object\n\t\t\t.fromEntries(Object\n\t\t\t\t.entries(object)\n\t\t\t\t.map(o => ([o[0], o[1][property]])));\n\t}\n}\n\nexport default ObjectUtils;","import { sentenceSplitString } from \"./regexp\";\n\n/**\n * @class StringUtils\n * @classdesc Various string utilities.\n */\nclass StringUtils {\n\t/**\n\t * Checks if a string is parsable as a JSON object.\n\t * \n\t * @param {string} str\n\t * @returns {boolean}\n\t * @memberof StringUtils\n\t */\n\tstatic isJSON(str) {\n\t\ttry {\n\t\t\tJSON.parse(str);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Limits the string to the specified size.\n\t * @param {string} string\n\t * @param {number} size\n\t * @returns {string} \n\t * @memberof StringUtils\n\t */\n\tstatic limit(string, size, ellipsis = false) {\n\t\tif (ellipsis) {\n\t\t\treturn string.replace(RegExp(`(?<=.{${size - 3}}).+`), \"...\");\n\t\t}\n\t\treturn string.slice(0, size);\n\t}\n\n\n\t/**\n\t * Chops a string into strings of a specified length.\n\t * @param {string} string\n\t * @param {number} size\n\t * @returns {string[]} \n\t * @memberof StringUtils\n\t */\n\tstatic chop(string, size) {\n\t\tlet chopped = [];\n\n\t\twhile (string.length > 0) {\n\t\t\tchopped.push(string.slice(0, size));\n\t\t\tif (string.length - size <= 0) {\n\t\t\t\tstring = 0;\n\t\t\t} else {\n\t\t\t\tstring = string.slice(size);\n\t\t\t}\n\t\t}\n\n\t\treturn chopped;\n\t}\n\n\t/**\n\t * Splits a string into an array containing its sentences.\n\t * @param {string} string \n\t * @returns {Array.<string>}\n\t * @memberof StringUtils\n\t */\n\tstatic splitSentences(string) {\n\t\treturn string.split(sentenceSplitString);\n\t}\n\n\t/**\n\t * Removes the elpisis (...) at the end of a string.\n\t * @param {string} string \n\t * @returns {string}\n\t * @memberof StringUtils\n\t */\n\tstatic removeEndingElipsis(string) {\n\t\treturn string.replace(/\\.\\.\\.$/, \"\");\n\t}\n\n\t/**\n\t * Attempts to evenly space strings.\n\t * (only really works with monospace fonts)\n\t * \n\t * you must put `$SPACE$` where you want the space to be\n\t * \n\t * ##### example:\n\t * ```js\n\t * [ \"key$SPACE$value\", \"examplekey$SPACE$examplevalue\" ]\n\t * ```\n\t * @param  {Array.<string>} strings\n\t * @param  {Object} [options]\n\t * @param  {\"left\"|\"right\"|\"center\"} [options.alignKey=\"left\"] The direction to align the keys.\n\t * \n\t * Default is `\"left\"`\n\t * @param  {number} [options.minimumSpacing=1] The minimum amount of spaces between the key and the value.\n\t * \n\t * Default is `1`.\n\t * @memberof StringUtils\n\t */\n\tstatic evenlySpace(strings, options) {\n\t\toptions = {\n\t\t\talignKey: \"left\",\n\t\t\tminimumSpacing: 1,\n\t\t\t...(options ?? {}),\n\t\t};\n\n\t\tstrings = strings.flat().map(str => {\n\t\t\tconst string = str.split(\"$SPACE$\");\n\n\t\t\tif (string.length > 2) {\n\t\t\t\tthrow new SyntaxError(\"this function currently only supports one spacing per string\");\n\t\t\t}\n\n\t\t\treturn string;\n\t\t});\n\n\t\tlet longestKey = 0, _strings = [];\n\t\tfor (const [key] of strings) {\n\t\t\tlongestKey = Math.max(longestKey, key.length);\n\t\t}\n\n\t\tfor (const _string of strings) {\n\t\t\tlet string = \"\";\n\t\t\tconst difference = longestKey - _string[0].length;\n\t\t\tstring += `${options.alignKey === \"left\" ? \"\" : \" \".repeat(Math.floor(difference / (options.alignKey === \"center\" ? 2 : 1)))}`;\n\t\t\tstring += _string[0];\n\t\t\tstring += `${options.alignKey === \"right\" ? \"\" : \" \".repeat(Math.ceil(difference / (options.alignKey === \"center\" ? 2 : 1)))}`;\n\t\t\tstring += `${\" \".repeat(options.minimumSpacing)}`;\n\t\t\tstring += _string[1];\n\n\t\t\t_strings.push(string);\n\t\t}\n\t\treturn _strings;\n\t}\n}\n\nexport default StringUtils;","\n/**\n * @class DocumentUtils\n * @classdesc Various document utilities.\n */\nclass DocumentUtils {\n\t/**\n\t * @param {Object} options The options for the element.\n\t * @param {string} options.tag The element tag.\n\t * @param {?string} options.id The element id.\n\t * @param {?Element} options.parent The element parent.\n\t * @param {?string} options.class The element class.\n\t * @param {?boolean} options.draggable Whether the element is draggable.\n\t * @returns {Element}\n\t * @memberof DocumentUtils\n\t */\n\tstatic create(options) {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tthrow new Error(\"This program is not being ran in a browser.\");\n\t\t}\n\n\t\tconst element = document.createElement(options.tag);\n\n\t\tif (options.id) {\n\t\t\telement.id = options.id;\n\t\t}\n\n\t\tif (options.class) {\n\t\t\telement.className = options.class;\n\t\t}\n\n\t\tif (options.draggable) {\n\t\t\telement.draggable = options.draggable;\n\t\t}\n\n\t\tif (options.parent) {\n\t\t\toptions.parent.appendChild(element);\n\t\t}\n\n\t\treturn element;\n\t}\n}\n\nexport default DocumentUtils;","import { default as ArrayUtils } from \"./utils/array\";\nimport { default as BooleanUtils } from \"./utils/boolean\";\nimport { default as DateUtils } from \"./utils/date\";\nimport { default as NumberUtils } from \"./utils/number\";\nimport { default as ObjectUtils } from \"./utils/object\";\nimport { default as RegExpUtils } from \"./utils/regexp\";\nimport { default as StringUtils } from \"./utils/string\";\nimport { default as DocumentUtils } from \"./utils/document\";\n\n/**\n * @class MeltyUtils\n * @classdesc Various utilities.\n */\nconst MeltyUtils = class MeltyUtils {\n\t/**\n\t * @type {ArrayUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic array = ArrayUtils;\n\t/**\n\t * @type {BooleanUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic boolean = BooleanUtils;\n\t/**\n\t * @type {DateUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic date = DateUtils;\n\t/**\n\t * @type {NumberUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic number = NumberUtils;\n\t/**\n\t * @type {ObjectUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic object = ObjectUtils;\n\t/**\n\t * @type {RegExpUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic regexp = RegExpUtils;\n\t/**\n\t * @type {StringUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic string = StringUtils;\n\t/**\n\t * @type {DocumentUtils}\n\t * @memberof MeltyUtils\n\t */\n\tstatic document = DocumentUtils;\n}\n\nexport default MeltyUtils;"],"names":["ArrayUtils","group","array","groupSize","ReferenceError","groups","_iterator","_createForOfIteratorHelperLoose","_step","done","item","value","length","push","groupBy","results","_i","_Object$keys","Object","keys","index","_iterator2","_step2","grouped","_i2","_Object$entries","entries","_Object$entries$_i","mapProperty","property","map","lastIndex","getIterations","reduce","a","v","isBooleanString","booleanStringIsTrue","booleanStringIsFalse","sentenceSplitString","RegExpUtils","BooleanUtils","is","resolvable","test","includes","parse","isTrue","isFalse","timeMs","DateUtils","difference","date1","date2","Date","now","valueOf","parseRelativeString","string","yearMatches","exec","monthMatches","dayMatches","hourMatches","minuteMatches","secondMatches","relative","matches","match","parseInt","isNaN","isDate","waitTill","date","callback","_len","arguments","args","Array","_key","Promise","resolve","setTimeout","apply","words","bigNumbers","single","teens","tens","NumberUtils","stringify","number","Math","floor","groupWords","hundreds","tensOnes","ones","trim","reverse","join","replace","applyRange","min","max","randomNumber","random","inRange","flipRange","ObjectUtils","addPropertyNonCircular","object","key","defineProperty","set","get","fromEntries","o","StringUtils","isJSON","str","JSON","e","limit","size","ellipsis","RegExp","slice","chop","chopped","splitSentences","split","removeEndingElipsis","evenlySpace","strings","options","_options","_extends","alignKey","minimumSpacing","flat","SyntaxError","longestKey","_strings","_step$value","_string","repeat","ceil","DocumentUtils","create","window","Error","element","document","createElement","tag","id","className","draggable","parent","appendChild","MeltyUtils","_class","regexp"],"mappings":"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"}